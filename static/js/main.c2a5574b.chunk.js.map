{"version":3,"sources":["types/types.js","helpers/getData.js","components/PantallaResultados.js","actions/cambiarEstadoRespuesta.js","components/Question.js","components/CatGame.js","components/StartGame.js","reducers/gameReducer.js","store/store.js","components/CatGameScreen.js","App.js","index.js"],"names":["types","getRandomCats","lista","numElementos","sort","Math","random","slice","getCats","a","fetch","resp","json","data","newCatList","filter","o","image","url","map","cat","id","catName","name","quizOptions","correctAnswer","quizObject","PantallaResultados","useSelector","state","game","correctAnswersCount","totalQuestions","dispatch","useDispatch","Date","now","useEffect","Swal","fire","imageUrl","imageAlt","customClass","text","width","padding","background","backdrop","confirmButtonColor","confirmButtonText","allowOutsideClick","then","result","isConfirmed","type","Question","counter","idCorrectAnswer","idUserAnswer","handleOptionAnswered","event","payload","answer","target","setTimeout","className","src","onClick","CatGame","loadQuestion","StartGame","initialState","startedGame","reducers","combineReducers","action","resultAnswerCorrect","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","CatGameScreen","swLocation","navigator","serviceWorker","location","href","includes","register","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2a5574b.chunk.js","sourcesContent":["export const types = {\r\n  startGame: \"[Game] Iniciar juego\",\r\n  answer: \"[Game] Answer\",\r\n  cambiarEstadoRespuesta: \"[Game] Cambiar Estado Respuesta\",\r\n  comprobarRespuesta: \"[Game] Comprobar Respuesta\",\r\n  obtenerResultadosFiltrados: \"[Game] Obtener Resultados Filtrados\",\r\n  // pasarAlSiguiente: \"[Game] Pasar al siguiente\",\r\n  loadQuestion: \"[Game] Load New Question\",\r\n  nextQuestion: \"[Game] Next Question\",\r\n  resetRespuestas: \"[Game] Resetear respuestas\",\r\n  resetRespuestasAcertadas: \"[Game] Resetear respuestas acertadas\",\r\n  reset: \"[Game] Reset\",\r\n};\r\n","// export const getData = async (category) => {\r\n//   const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n//     category\r\n//   )}&limit=10&api_key=2IYaG55WPp4iOxH8l6os5OjgjTFimzOH`;\r\n//   const resp = await fetch(url);\r\n//   const { data } = await resp.json();\r\n\r\n//   const gifs = data.map((img) => {\r\n//     return {\r\n//       id: img.id,\r\n//       title: img.title,\r\n//       url: img.images?.downsized_medium.url,\r\n//     };\r\n//   });\r\n\r\n//   return gifs;\r\n// };\r\nfunction getRandomCats(lista, numElementos) {\r\n  return [...lista]\r\n    .sort(() => (Math.random() > 0.5 ? 1 : -1))\r\n    .slice(0, numElementos);\r\n}\r\n\r\nexport const getCats = async () => {\r\n  const url = \"https://api.thecatapi.com/v1/breeds\";\r\n  const resp = await fetch(url);\r\n  const data = await resp.json();\r\n  const newCatList = data\r\n    .filter((o) => o?.image?.url != null)\r\n    .map((cat) => {\r\n      return {\r\n        id: cat.id,\r\n        catName: cat.name,\r\n        url: cat.image.url,\r\n      };\r\n    });\r\n\r\n  const quizOptions = getRandomCats(newCatList, 3);\r\n  const correctAnswer = getRandomCats(quizOptions, 1)[0];\r\n\r\n  const quizObject = {\r\n    quizOptions,\r\n    correctAnswer,\r\n  };\r\n\r\n  return quizObject;\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { reset } from \"../actions/cambiarEstadoRespuesta\";\r\n\r\nexport const PantallaResultados = () => {\r\n  const { correctAnswersCount, totalQuestions } = useSelector(\r\n    (state) => state.game\r\n  );\r\n\r\n  const customTitle = () => {\r\n    if (correctAnswersCount <= 4) {\r\n      return \"You know nothing\";\r\n    } else if (correctAnswersCount <= 7) {\r\n      return \"Must improve\";\r\n    } else {\r\n      return \"You are a Meowster!\";\r\n    }\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const image =\r\n    \"https://cataas.com/cat/says/\" + customTitle() + \"?t=\" + Date.now();\r\n  useEffect(() => {\r\n    Swal.fire({\r\n      imageUrl: image,\r\n      imageAlt: \"Custom image\",\r\n      customClass: \"swal-style\",\r\n      text: \"Score: \" + correctAnswersCount + \"/\" + totalQuestions,\r\n      width: 600,\r\n      padding: \"3em\",\r\n      background: \"#fff url(/images/trees.png)\",\r\n      backdrop: `\r\n              rgba(0,0,123,0.4)\r\n              left top\r\n              no-repeat\r\n            `,\r\n      confirmButtonColor: \"#3085d6\",\r\n      confirmButtonText: \"Try again\",\r\n      allowOutsideClick: false,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        dispatch(reset());\r\n      }\r\n    });\r\n  }, [correctAnswersCount]);\r\n\r\n  //);\r\n\r\n  // Swal.fire({\r\n  //   title: \"Custom width, padding, background.\",\r\n  //   width: 600,\r\n  //   padding: \"3em\",\r\n  //   background: \"#fff url(/images/trees.png)\",\r\n  //   backdrop: `\r\n  //       rgba(0,0,123,0.4)\r\n  //       url(\"/images/nyan-cat.gif\")\r\n  //       left top\r\n  //       no-repeat\r\n  //     `,\r\n  // });\r\n\r\n  return <div></div>;\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\n// export const startGame = () => {\r\n//   return {\r\n//     type: types.startGame,\r\n//   };\r\n// };\r\nexport const startGame = (/*quizObject*/) => {\r\n  return {\r\n    type: types.startGame,\r\n    //payload: quizObject,\r\n  };\r\n};\r\nexport const loadQuestion = (quizObject) => {\r\n  return {\r\n    type: types.loadQuestion,\r\n    payload: quizObject,\r\n  };\r\n};\r\n\r\n// export const startCheckAnswer = (userAnswer) => {\r\n//   return async (dispatch, getState) => {\r\n// const {userAnswer} = getState\r\n//   };\r\n// };\r\n\r\n// export const checkAnswer = (userAnswer) => {\r\n//   return  {\r\n//     type: types.checkAnswer,\r\n//     payload: userAnswer,\r\n//   };\r\n// };\r\n\r\nexport const answer = (idUserAnswer) => {\r\n  return {\r\n    type: types.answer,\r\n    payload: { idUserAnswer: idUserAnswer },\r\n  };\r\n};\r\n\r\nexport const cambiarEstadoRespuesta = (esCorrecto) => {\r\n  return {\r\n    type: types.cambiarEstadoRespuesta,\r\n    payload: esCorrecto,\r\n  };\r\n};\r\nexport const obtenerResultadosFiltrados = (listaFiltrada) => {\r\n  return {\r\n    type: types.obtenerResultadosFiltrados,\r\n    payload: listaFiltrada,\r\n  };\r\n};\r\nexport const nextQuestion = () => {\r\n  return {\r\n    type: types.nextQuestion,\r\n  };\r\n};\r\n// export const pasarAlSiguiente = (contador, numeroTotalPreguntas) => {\r\n//   return {\r\n//     type: types.pasarAlSiguiente,\r\n//     payload: { contador, numeroTotalPreguntas },\r\n//   };\r\n// };\r\nexport const comprobarRespuesta = (\r\n  listaPosiblesRespuestas,\r\n  idRespuestaMarcada,\r\n  idRespuestaCorrecta\r\n) => {\r\n  return {\r\n    type: types.comprobarRespuesta,\r\n    payload: {\r\n      listaPosiblesRespuestas,\r\n      idRespuestaMarcada,\r\n      idRespuestaCorrecta,\r\n    },\r\n  };\r\n};\r\nexport const resetRespuestas = () => {\r\n  return {\r\n    type: types.resetRespuestas,\r\n  };\r\n};\r\nexport const resetRespuestasAcertadas = () => {\r\n  return {\r\n    type: types.resetRespuestasAcertadas,\r\n  };\r\n};\r\nexport const reset = () => {\r\n  return {\r\n    type: types.reset,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { nextQuestion, answer } from \"../actions/cambiarEstadoRespuesta\";\r\nimport { PantallaResultados } from \"./PantallaResultados\";\r\n\r\nexport const Question = ({ quizObject }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { counter, totalQuestions, idCorrectAnswer, idUserAnswer } =\r\n    useSelector((state) => state.game);\r\n\r\n  const handleOptionAnswered = (event) => {\r\n    dispatch(answer(event.target.id));\r\n\r\n    if (counter !== totalQuestions) {\r\n      setTimeout(() => {\r\n        dispatch(nextQuestion());\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"animate__animated animate__fadeIn\">\r\n      {counter === totalQuestions && idUserAnswer !== null && (\r\n        <PantallaResultados />\r\n      )}\r\n\r\n      <div className=\"game-container\">\r\n        <div className=\"question-number\">\r\n          {\" \"}\r\n          <span className=\"contador\">\r\n            {counter} of {totalQuestions}\r\n          </span>\r\n        </div>\r\n        <div className=\"image-questions\">\r\n          {quizObject && (\r\n            <>\r\n              <div className=\"image-card\">\r\n                <img\r\n                  src={\r\n                    quizObject.correctAnswer.url != null &&\r\n                    quizObject.correctAnswer.url != null\r\n                      ? quizObject.correctAnswer.url\r\n                      : \"\"\r\n                  }\r\n                  width=\"200px\"\r\n                ></img>\r\n              </div>\r\n              <div className=\"form-container\">\r\n                {quizObject.quizOptions.map((o) => (\r\n                  <button\r\n                    id={o.id}\r\n                    className={\r\n                      \"option-box \" +\r\n                      ((idUserAnswer !== null &&\r\n                        o.id === idCorrectAnswer &&\r\n                        \"correcto\") ||\r\n                        (idUserAnswer !== null &&\r\n                          o.id !== idCorrectAnswer &&\r\n                          \"incorrecto\"))\r\n                    }\r\n                    key={o.id}\r\n                    onClick={handleOptionAnswered}\r\n                  >\r\n                    {o.catName}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadQuestion } from \"../actions/cambiarEstadoRespuesta\";\r\n\r\nimport { getCats } from \"../helpers/getData\";\r\n\r\nimport { Question } from \"./Question\";\r\n\r\nexport const CatGame = () => {\r\n  const dispatch = useDispatch();\r\n  const { counter, quizObject } = useSelector((state) => state.game);\r\n\r\n  useEffect(() => {\r\n    getCats().then((quizObject) => {\r\n      dispatch(loadQuestion(quizObject));\r\n    });\r\n  }, [counter]);\r\n\r\n  return <Question quizObject={quizObject} />;\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startGame } from \"../actions/cambiarEstadoRespuesta\";\r\nimport { getCats } from \"../helpers/getData\";\r\n\r\nexport const StartGame = () => {\r\n  const dispatch = useDispatch();\r\n  const handleStartGame = () => {\r\n    //precarga??\r\n    // const url = \"https://api.thecatapi.com/v1/breeds\";\r\n    // debugger;\r\n    // fetch(url)\r\n    //   .then((resp) => resp.json())\r\n    //   .then((data) => data.filter((o) => o?.image?.url != null))\r\n    //   .then((newCatList) => {\r\n    //     debugger;\r\n    //     const myHeaders = new Headers();\r\n    //     myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    //     newCatList.forEach((element) => {\r\n    //       fetch(element?.image?.url, {\r\n    //         headers: myHeaders,\r\n    //       }).then(console.log);\r\n    //     });\r\n    //   });\r\n\r\n    getCats().then(dispatch(startGame()));\r\n  };\r\n\r\n  return (\r\n    <div className=\"startGame-btn\">\r\n      <button onClick={handleStartGame}>START</button>\r\n    </div>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  quizObject: null,\r\n  idCorrectAnswer: null,\r\n  idUserAnswer: null,\r\n  counter: 1,\r\n  startedGame: false,\r\n  correctAnswersCount: 0,\r\n  totalQuestions: 10,\r\n};\r\n\r\nexport const gameReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.startGame:\r\n      return {\r\n        ...state,\r\n        startedGame: true,\r\n      };\r\n    case types.loadQuestion:\r\n      return {\r\n        ...state,\r\n        quizObject: action.payload,\r\n        idCorrectAnswer: action.payload.correctAnswer.id,\r\n      };\r\n\r\n    case types.answer:\r\n      const resultAnswerCorrect =\r\n        action.payload.idUserAnswer === state.idCorrectAnswer ? 1 : 0;\r\n      return {\r\n        ...state,\r\n        idUserAnswer: action.payload.idUserAnswer,\r\n        correctAnswersCount: state.correctAnswersCount + resultAnswerCorrect,\r\n      };\r\n\r\n    case types.nextQuestion:\r\n      return {\r\n        ...state,\r\n        counter:\r\n          state.counter < state.totalQuestions\r\n            ? state.counter + 1\r\n            : (state.counter = 0),\r\n        idUserAnswer: null,\r\n      };\r\n\r\n    case types.reset:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { gameReducer } from \"../reducers/gameReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  game: gameReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\r\nimport { StartGame } from \"./StartGame\";\r\nimport { CatGame } from \"./CatGame\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport const CatGameScreen = () => {\r\n  const { startedGame } = useSelector((state) => state.game);\r\n\r\n  return (\r\n    <div className=\"heroCat animate__animated animate__fadeIn\">\r\n      {/* <div className=\"container-game\"> */}{\" \"}\r\n      <div className=\"header \">\r\n        <div className=\"cat-image-container\">\r\n          <div className=\"cat-image\"></div>\r\n        </div>\r\n        <div className=\"title\">\r\n          <h1>Cat Quiz</h1>\r\n        </div>\r\n        <div className=\"title-question\">\r\n          {\" \"}\r\n          <h3>How much do you know about cats?</h3>\r\n        </div>\r\n      </div>\r\n      {startedGame ? <CatGame /> : <StartGame />}\r\n    </div>\r\n  );\r\n};\r\n","import { CatGame } from \"./components/CatGame\";\nimport { StartGame } from \"./components/StartGame\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\n// import { AppRouter } from \"./components/AppRouter\";\nimport { CatGameScreen } from \"./components/CatGameScreen\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <CatGameScreen />\n    </Provider>\n  );\n}\nvar swLocation = \"./sw.js\";\nif (navigator.serviceWorker) {\n  var url = window.location.href;\n\n  if (url.includes(\"localhost\")) {\n    swLocation = \"./catsApp/sw.js\";\n  }\n  navigator.serviceWorker.register(swLocation);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}